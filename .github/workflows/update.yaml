name: Update Helm values
on:
  pull_request:
    types: [opened, synchronize, closed]

env:
  STAGES: "dev prod"
  CONF_DIR: "config/"
  VALUES_DIR: "values/"

jobs:
  build:
    name: Update values
    runs-on: ubuntu-latest
    outputs:
      values_changed: ${{ steps.values.outputs.values_changed }}

    steps:
      -
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Get changed apps
        id: changed-apps
        uses: tj-actions/changed-files@v41
        with:
          files: |
            config/*/*.*
      - uses: cue-lang/setup-cue@v1.0.0
      -
        name: Build
        if: steps.changed-apps.outputs.any_changed == 'true'
        env:
          CHANGED_APP_FILES: ${{ steps.changed-apps.outputs.all_changed_files }}
        run: |
          ## get apps (filter out app from paths config/{app}/...)
          echo -e "${CHANGED_APP_FILES// /$'\n'}" | grep '^.*/.*/' | sed -En 's%^[^/]*/([^/]*)/.*%\1%; p' | uniq | \
          while read app; do
            for stage in $STAGES; do
              cue cmd -t env=$stage -t app=$app update-values
            done
          done
      -
        name: Show Changes
        id: values
        run: |
          git add $VALUES_DIR
          valuesChanged=no
          [ "$( git diff --name-only HEAD^ -- $VALUES_DIR | wc -l)" -eq 0 ] || valuesChanged=yes
          echo -n "âœ” "; echo "values_changed=${valuesChanged}" | tee "$GITHUB_OUTPUT"

          if [ $valuesChanged = "yes" ]; then
            # get delta
            pkgurl="https://github.com/dandavison/delta/releases/download/0.16.5/git-delta_0.16.5_amd64.deb"
            wget -qO /tmp/delta.deb "$pkgurl" && sudo dpkg -i /tmp/delta.deb > /dev/null
            rm -f delta.deb &> /dev/null

            # show diff
            git diff HEAD^ -- $VALUES_DIR | delta --syntax-theme=GitHub -n --diff-so-fancy
          fi
      -
        uses: actions/upload-artifact@v4
        ## Note: use yes (string) not to avoid confusion with true/'true'.
        if: steps.values.outputs.values_changed == 'yes'
        with:
          name: changed-values
          path: ${{ env.VALUES_DIR }}

  commit:
    name: Commit changes
    runs-on: ubuntu-latest
    needs: build

    if: |
      needs.build.outputs.values_changed == 'yes' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true

    permissions:
      contents: write

    steps:
      -
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        uses: actions/download-artifact@v4
        with:
          name: changed-values
          path: ${{ env.VALUES_DIR }}
      -
        name: Add and commit updated values
        uses: EndBug/add-and-commit@v9
        with:
          add: ${{ env.VALUES_DIR }}
          message: 'auto committed values'
          commit: --signoff
